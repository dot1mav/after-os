#!/bin/bash


ROOT="/etc"
LSB_FILE="lsb-release"
DISTRIB_SUFFIX="release"
DEBIAN_FILE="/etc/debian_version"
DEBIAN_NAME="Debian"
FILENAME="/etc/os-release"

# You can add every package wich you need after installing fresh OS
APT_PACKAGES="git curl"
PACMAN_PACKAGES="konsole dolphin okular firefox terminus-font
	pulseaudio pulseaudio-alsa plasma-pa plasma-nm
	networkmanager bash-completion curl git" 
DNF_PACKAGES=""
YUM_PACKAGES=""
PROGRAMMING_PACKAGE_PY="python3 python3-pip openjdk-11 gcc g++"
SHELL="zsh"
CHANGE_SHELL=0

distribution(){
        if [ -z  "$FILENAME" ]
        then
                if [ -f "$DEBIAN_FILE" ]
                then
                        DISTRO=$DEBIAN_NAME
                else
                        echo "Unable to find your distro"
                fi
        else
                CONTENT=$(head -1 $FILENAME 2> /dev/null)
                DISTRO=$(echo $CONTENT | sed -e \
                "s/[[:blank:]][Ll][Ii][Nn][Uu][Xx][[:blank:]]/ /g" \
                -e "s/\(.*\)[[:blank:]]release.*/\1/" \
                -e "s/[[:blank:]]/ /g" )
        fi
}

find_distro(){
	if [[ -f "$FILENAME" ]] ; then
		DISTRO=$(head -1  /etc/os-release | cut -f 2 -d '"' | cut -f 1 -d ' ')
	else
		FILENAME="/etc/redhat-release"
        	if [ ! -f "$FILENAME" ]
	        then
			FILENAME=$(find $ROOT/ -maxdepth 1      \
				-name \*$DISTRIB_SUFFIX         \
				-and ! -name $LSB_FILE          \
				-and -type f    2> /dev/null    \
				| head -1 )
	        fi
        	distribution $FILENAME
	fi
}


instaling(){
	find_distro
	echo "Installing packages which I use"
	if [[ "$DISTRO" == "Linuxmint" || "$DISTRO" == "Debian" || "$DISTRO" == "Ubuntu" ]]
	then
		# Installing packages which I need
		echo "Debian Distro :)"
		sleep 2
		echo "updating"
		apt-get update &> /dev/null
		sleep 2
		clear
		echo "upgrading"
		apt-get upgrade -y &> /dev/null
		sleep 2
		clear
		echo "installing packages"
		apt-get install -y $APT_PACKAGES &> /dev/null
		sleep 2
		clear

	elif [[ "$DISTRO" == "Arch" || "$DISTRO" == "ManjaroLinux" ]] ; then
		echo "Arch Base Distro"
		sleep 2
		pacman -S $PACMAN_PACKAGES

	elif [[ "$DISTRO" == "CentOS" || "$DISTRO" == "Fedora" || "$DISTRO" == "rhel" ]] ; then
		echo "Redhat Distro"
		sleep 2
		yum install $YUM_PACKAGES
	else
		echo $DISTRO
		echo "Your distro is not supported"
	fi
}

main(){
	UNAME=$(uname)
	if [ "$UNAME" == "Linux" ] ; then
		instaling
	elif [ "$UNAME" == "Darwin" ] ; then
		echo "You use Darwin and this OS is not supported"
		exit
	elif [[ "$UNAME" == CYGWIN* || "$UNAME" == MINGW* ]] ; then
		echo "You use Windows and this OS is not supported"
		exit
	fi
}

main

# Creating ~/.xinitrc
echo 'exec startplasma-x11' > ~/.xinitrc

# Installing vim-plug (vim plugin manager)
echo "installing vim-plug"
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim &> /dev/null

echo "vim-plug installed"
echo "---> configurations for vim plugins"

echo "./vimrc.save --> ~/.vimrc"
cp ./vimrc.save ~/.vimrc

echo "Remember to install plugins from vim"
echo "--> :source .vimrc"
echo "--> :PlugInstall"

# Bash configuration ~/.bashrc
echo "./bashrc.save --> ~/.bashrc"
cp ./bashrc.save ~/.bashrc

# Creating /etc/vconsole.conf
echo FONT=ter-924n.psf.gz > /etc/vconsole.conf
